<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.example.demo.mapper.VCMapper">


    <!--    commit 在 main 分支第一步，创建一个新的仓库并且直接返回 childId-->
    <insert id="createNewVc" >
        insert into VC value (#{fatherId}, #{childId});
    </insert>



    <!--  返回father  -->
    <select id="selectVCbyFather" resultMap="VC">
        select * from VC where FatherRepoId = #{rootRepoId} ;
    </select>

    <resultMap id="VC" type="VC">
        <result column="FatherRepoId" property="fatherRepoId"></result>
        <result column="ChildRepoId" property="childRepoId"></result>
    </resultMap>

    <select id="selectVCbyChild" resultType="VC">
        select * from VC where ChildRepoId = #{childRepoId} ;
    </select>

    <update id="updateVC">
        update VC SET FatherRepoId = #{newFatherId}, ChildRepoId = #{newChildId}
                  where FatherRepoId = #{vc.fatherRepoId} and ChildRepoId = #{vc.childRepoId};
    </update>

    <delete id="deleteVC" parameterType="VC">
        delete from VC where FatherRepoId = #{fatherRepoId} and ChildRepoId = #{childRepoId}
    </delete>



    <!--    <select id="selectRepoContentByRepoId" resultMap="RepoContentResultMap">-->
    <!--        select * from repocontent where RepoId = #{repoId};-->
    <!--    </select>-->

    <!--    &lt;!&ndash;RepoContent ResultMap&ndash;&gt;-->
    <!--    <resultMap id="RepoContentResultMap" type="com.example.demo.entity.RepoContent">-->
    <!--        <id property="repoId" column="RepoId" />-->

    <!--        <result property="content" column="Content" />-->
    <!--        <result property="comment" column="Comment"/>-->
    <!--        <result property="commitTime" column="CommitTime" />-->
    <!--        <result property="versionId" column="VersionId"/>-->
    <!--    </resultMap>-->



</mapper>

